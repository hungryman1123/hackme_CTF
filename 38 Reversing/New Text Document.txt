习条件运算时，对于简单的 if else 语句，可以使用三元运算来表示，即：
# 普通条件语句
if 1 == 1:
    name = 'wupeiqi'
else:
    name = 'alex'
  
# 三元运算
name = 'wupeiqi' if 1 == 1 else 'alex'


对于简单的函数，也存在一种简便的表示方式，即：lambda表达式
# ###################### 普通函数 ######################
# 定义函数（普通方式）
def func(arg):
    return arg + 1
  
# 执行函数
result = func(123)
  
# ###################### lambda ######################
  
# 定义函数（lambda表达式）
my_lambda = lambda arg : arg + 1
  
# 执行函数
result = my_lambda(123)
lambda存在意义就是对简单函数的简洁表示

/*************************************************************************************/
int(x, [base])

作用：

将一个数字或base类型的字符串转换成整数。

int(x=0)

int(x, base=10)，base缺省值为10，也就是说不指定base的值时，函数将x按十进制处理。

注：

1. x 可以是数字或字符串，但是base被赋值后 x 只能是字符串

2. x 作为字符串时必须是 base 类型，也就是说 x 变成数字时必须能用 base 进制表示

1 int(3.14)            # 3
2 int(2e2)             # 200
3 int(100, 2)          # 出错，base 被赋值后函数只接收字符串

1 int('23', 16)      # 35
2 int('Pythontab', 8)      # 出错，Pythontab不是个8进制数

1 int('FZ', 16)      # 出错，FZ不能用十六进制表示
2 int('FZ', 36)      # 575

int('0x10', 16)  # 16，0x是十六进制的符号
int('0x10', 17)  # 出错，'0x10'中的 x 被视作英文字母 x
int('0x10', 36)  # 42804，36进制包含字母 x